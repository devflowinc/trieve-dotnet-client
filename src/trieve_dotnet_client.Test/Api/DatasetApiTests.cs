/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using trieve_dotnet_client.Client;
using trieve_dotnet_client.Api;
// uncomment below to import models
//using trieve_dotnet_client.Model;

namespace trieve_dotnet_client.Test.Api
{
    /// <summary>
    ///  Class for testing DatasetApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DatasetApiTests : IDisposable
    {
        private DatasetApi instance;

        public DatasetApiTests()
        {
            instance = new DatasetApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DatasetApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DatasetApi
            //Assert.IsType<DatasetApi>(instance);
        }

        /// <summary>
        /// Test CreateDataset
        /// </summary>
        [Fact]
        public void CreateDatasetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tROrganization = null;
            //CreateDatasetRequest createDatasetRequest = null;
            //var response = instance.CreateDataset(tROrganization, createDatasetRequest);
            //Assert.IsType<Dataset>(response);
        }

        /// <summary>
        /// Test DeleteDataset
        /// </summary>
        [Fact]
        public void DeleteDatasetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tROrganization = null;
            //DeleteDatasetRequest deleteDatasetRequest = null;
            //instance.DeleteDataset(tROrganization, deleteDatasetRequest);
        }

        /// <summary>
        /// Test GetClientDatasetConfig
        /// </summary>
        [Fact]
        public void GetClientDatasetConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tRDataset = null;
            //var response = instance.GetClientDatasetConfig(tRDataset);
            //Assert.IsType<ClientDatasetConfiguration>(response);
        }

        /// <summary>
        /// Test GetDataset
        /// </summary>
        [Fact]
        public void GetDatasetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tROrganization = null;
            //string tRDataset = null;
            //Guid datasetId = null;
            //var response = instance.GetDataset(tROrganization, tRDataset, datasetId);
            //Assert.IsType<Dataset>(response);
        }

        /// <summary>
        /// Test GetDatasetsFromOrganization
        /// </summary>
        [Fact]
        public void GetDatasetsFromOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tROrganization = null;
            //Guid organizationId = null;
            //var response = instance.GetDatasetsFromOrganization(tROrganization, organizationId);
            //Assert.IsType<List<DatasetAndUsage>>(response);
        }

        /// <summary>
        /// Test UpdateDataset
        /// </summary>
        [Fact]
        public void UpdateDatasetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tROrganization = null;
            //UpdateDatasetRequest updateDatasetRequest = null;
            //var response = instance.UpdateDataset(tROrganization, updateDatasetRequest);
            //Assert.IsType<Dataset>(response);
        }
    }
}
