/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using trieve_dotnet_client.Model;
using trieve_dotnet_client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace trieve_dotnet_client.Test.Model
{
    /// <summary>
    ///  Class for testing SlimUser
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SlimUserTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SlimUser
        //private SlimUser instance;

        public SlimUserTests()
        {
            // TODO uncomment below to create an instance of SlimUser
            //instance = new SlimUser();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SlimUser
        /// </summary>
        [Fact]
        public void SlimUserInstanceTest()
        {
            // TODO uncomment below to test "IsType" SlimUser
            //Assert.IsType<SlimUser>(instance);
        }

        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Orgs'
        /// </summary>
        [Fact]
        public void OrgsTest()
        {
            // TODO unit test for the property 'Orgs'
        }

        /// <summary>
        /// Test the property 'UserOrgs'
        /// </summary>
        [Fact]
        public void UserOrgsTest()
        {
            // TODO unit test for the property 'UserOrgs'
        }

        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Fact]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }

        /// <summary>
        /// Test the property 'VisibleEmail'
        /// </summary>
        [Fact]
        public void VisibleEmailTest()
        {
            // TODO unit test for the property 'VisibleEmail'
        }

        /// <summary>
        /// Test the property 'Website'
        /// </summary>
        [Fact]
        public void WebsiteTest()
        {
            // TODO unit test for the property 'Website'
        }
    }
}
