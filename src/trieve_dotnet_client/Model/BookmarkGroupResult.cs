/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = trieve_dotnet_client.Client.OpenAPIDateConverter;

namespace trieve_dotnet_client.Model
{
    /// <summary>
    /// BookmarkGroupResult
    /// </summary>
    [DataContract(Name = "BookmarkGroupResult")]
    public partial class BookmarkGroupResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BookmarkGroupResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BookmarkGroupResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BookmarkGroupResult" /> class.
        /// </summary>
        /// <param name="chunkUuid">chunkUuid (required).</param>
        /// <param name="slimGroups">slimGroups (required).</param>
        public BookmarkGroupResult(Guid chunkUuid = default(Guid), List<SlimGroup> slimGroups = default(List<SlimGroup>))
        {
            this.ChunkUuid = chunkUuid;
            // to ensure "slimGroups" is required (not null)
            if (slimGroups == null)
            {
                throw new ArgumentNullException("slimGroups is a required property for BookmarkGroupResult and cannot be null");
            }
            this.SlimGroups = slimGroups;
        }

        /// <summary>
        /// Gets or Sets ChunkUuid
        /// </summary>
        [DataMember(Name = "chunk_uuid", IsRequired = true, EmitDefaultValue = true)]
        public Guid ChunkUuid { get; set; }

        /// <summary>
        /// Gets or Sets SlimGroups
        /// </summary>
        [DataMember(Name = "slim_groups", IsRequired = true, EmitDefaultValue = true)]
        public List<SlimGroup> SlimGroups { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BookmarkGroupResult {\n");
            sb.Append("  ChunkUuid: ").Append(ChunkUuid).Append("\n");
            sb.Append("  SlimGroups: ").Append(SlimGroups).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
