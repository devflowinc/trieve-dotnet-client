/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = trieve_dotnet_client.Client.OpenAPIDateConverter;

namespace trieve_dotnet_client.Model
{
    /// <summary>
    /// SearchOverGroupsResponseBody
    /// </summary>
    [DataContract(Name = "SearchOverGroupsResponseBody")]
    public partial class SearchOverGroupsResponseBody : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchOverGroupsResponseBody" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SearchOverGroupsResponseBody() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchOverGroupsResponseBody" /> class.
        /// </summary>
        /// <param name="groupChunks">groupChunks (required).</param>
        /// <param name="totalChunkPages">totalChunkPages (required).</param>
        public SearchOverGroupsResponseBody(List<GroupScoreChunkDTO> groupChunks = default(List<GroupScoreChunkDTO>), long totalChunkPages = default(long))
        {
            // to ensure "groupChunks" is required (not null)
            if (groupChunks == null)
            {
                throw new ArgumentNullException("groupChunks is a required property for SearchOverGroupsResponseBody and cannot be null");
            }
            this.GroupChunks = groupChunks;
            this.TotalChunkPages = totalChunkPages;
        }

        /// <summary>
        /// Gets or Sets GroupChunks
        /// </summary>
        [DataMember(Name = "group_chunks", IsRequired = true, EmitDefaultValue = true)]
        public List<GroupScoreChunkDTO> GroupChunks { get; set; }

        /// <summary>
        /// Gets or Sets TotalChunkPages
        /// </summary>
        [DataMember(Name = "total_chunk_pages", IsRequired = true, EmitDefaultValue = true)]
        public long TotalChunkPages { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SearchOverGroupsResponseBody {\n");
            sb.Append("  GroupChunks: ").Append(GroupChunks).Append("\n");
            sb.Append("  TotalChunkPages: ").Append(TotalChunkPages).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
